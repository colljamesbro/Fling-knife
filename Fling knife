local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to teleport behind a random player
local function teleportBehindRandomPlayer()
    local randomPlayer = nil

    -- Get a random player who is not the local player
    local otherPlayers = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(otherPlayers, player)
        end
    end

    if #otherPlayers > 0 then
        randomPlayer = otherPlayers[math.random(1, #otherPlayers)]
    end

    -- If a random player is found, teleport behind them
    if randomPlayer and randomPlayer.Character then
        local randomPlayerRoot = randomPlayer.Character:FindFirstChild("HumanoidRootPart")
        local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if randomPlayerRoot and localRoot then
            -- Position slightly behind the random player
            local newPosition = randomPlayerRoot.Position - randomPlayerRoot.CFrame.LookVector * 5
            localRoot.CFrame = CFrame.new(newPosition)
        end
    end
end

-- Monitor the player's health for changes
local function monitorHealth()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    -- Keep track of the current health
    local currentHealth = humanoid.Health

    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        if humanoid.Health < currentHealth then
            -- Teleport if health decreases (indicating a hit)
            teleportBehindRandomPlayer()
        end
        currentHealth = humanoid.Health
    end)
end

-- Set up the character and start monitoring health
LocalPlayer.CharacterAdded:Connect(monitorHealth)

if LocalPlayer.Character then
    monitorHealth()
end
